# ===== Global =====
spring.application.name=${SPRING_APPLICATION_NAME:tutorai-be}
server.forward-headers-strategy=framework
server.port=${PORT:9000}    

# ===== DB =====
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# ===== JWT =====
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=${JWT_EXPIRATION:3600000}
app.jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:604800000}

# ===== OTP =====
app.base-url=${APP_BASE_URL:http://localhost:9000}
app.otp.expire-minutes=${OTP_EXPIRE_MINUTES:10}
app.otp.max-attempts=${OTP_MAX_ATTEMPTS:5}
app.otp.resend-limit-per-hour=${OTP_RESEND_LIMIT_PER_HOUR:3}

# ===== Mail (SendGrid) =====
mail.provider=${MAIL_PROVIDER:sendgrid}
sendgrid.api-key=${SENDGRID_API_KEY}
mail.from.address=${MAIL_FROM_ADDRESS}
mail.from.name=${MAIL_FROM_NAME}

# ===== Google OAuth2 =====
spring.security.oauth2.client.registration.google.client-id=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.client-name=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_NAME:Google}
spring.security.oauth2.client.registration.google.scope=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_SCOPE:openid,profile,email}
# DÙNG REDIRECT-URI ĐỘNG => chạy được cả local và render, không cần APP_BASE_URL
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.provider.google.authorization-uri=${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_AUTHORIZATION_URI}
spring.security.oauth2.client.provider.google.token-uri=${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_TOKEN_URI}
spring.security.oauth2.client.provider.google.user-info-uri=${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_USER_INFO_URI}
spring.security.oauth2.client.provider.google.user-name-attribute=${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_USER_NAME_ATTRIBUTE:sub}

# ===== Logging =====
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.com=DEBUG
